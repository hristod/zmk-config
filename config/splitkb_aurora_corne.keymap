/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    flavor = "hold-preferred";
    tapping-term-ms = <150>;
};

/ {
    behaviors {
        mo_kp: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <150>;
            bindings = <&mo>, <&kp>;
        };

        hrt_lh: hrt_lh {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <19 20 21 22 18 10 9 8 7 6 30 31 33 32 34 11 23 35 39 40 41>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hrt_rh: hrt_rh {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_RH";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 4 3 2 1 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 38 37 36>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        hmr_ctrl_l {
            bindings = <&kp RCTRL>;
            key-positions = <16 15>;
        };

        hrm_gui_l {
            bindings = <&kp LEFT_GUI>;
            key-positions = <14 15>;
        };

        hrm_alt_l {
            bindings = <&kp LEFT_ALT>;
            key-positions = <14 13>;
        };

        hrm_ctrl_r {
            bindings = <&kp RCTRL>;
            key-positions = <19 20>;
        };

        hrm_gui_r {
            bindings = <&kp LEFT_GUI>;
            key-positions = <20 21>;
        };

        hmr_alt_r {
            bindings = <&kp LEFT_ALT>;
            key-positions = <21 22>;
        };

        hmr_ctrl_cmd_l {
            bindings = <&kp LC(LEFT_GUI)>;
            key-positions = <17 16 15>;
        };

        hmr_ctrl_cmd_r {
            bindings = <&kp RC(RGUI)>;
            key-positions = <18 19 20>;
        };

        hmr_ctrl_alt_l {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <17 15 16 14>;
        };

        hmr_ctrl_alt_r {
            bindings = <&kp LC(RALT)>;
            key-positions = <18 20 19 21>;
        };

        hmr_cmd_alt_l {
            bindings = <&kp LA(LGUI)>;
            key-positions = <16 15 14>;
        };

        hmr_cmd_alt_r {
            bindings = <&kp LA(RGUI)>;
            key-positions = <19 20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL+ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | ALT      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none      &kp Q  &kp W  &kp E           &kp R      &kp T        &kp Y      &kp U            &kp I            &kp O    &kp P          &kp BSPC
&kp TAB    &kp A  &kp S  &kp D           &kp F      &kp G        &kp H      &kp J            &kp K            &kp L    &kp SEMICOLON  &kp BACKSLASH
&kp GRAVE  &kp Z  &kp X  &kp C           &kp V      &kp B        &kp N      &kp M            &kp COMMA        &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                         &kp LEFT_SHIFT  &lt 1 ESC  &kp SPACE    &kp ENTER  &lt 2 BACKSPACE  &kp RIGHT_SHIFT
            >;
        };

        numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     | BTCLR|
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none        &kp LG(LEFT)  &kp LA(LEFT)  &kp LA(RIGHT)  &kp LG(RIGHT)  &none  &kp BSPC
&none  &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none        &kp LEFT      &kp DOWN      &kp UP_ARROW   &kp RIGHT      &none  &trans
&none  &none  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp N0       &none         &none         &none          &none          &none  &none
                            &trans        &trans        &kp SPACE    &kp RET       &mo 3         &trans
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB     |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL+ESC |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT     |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp CARET        &kp QUESTION  &kp SQT   &kp DOUBLE_QUOTES  &none          &kp LESS_THAN   &kp LEFT_BRACKET      &kp EQUAL  &kp RIGHT_BRACKET      &kp GREATER_THAN  &kp BSPC
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH  &kp DOLLAR         &kp PERCENT    &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp COLON  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &kp BACKSLASH
&none   &none            &kp TILDE     &kp PIPE  &kp AMPERSAND      &none          &kp PLUS        &kp ASTERISK          &kp MINUS  &kp UNDERSCORE         &none             &kp FSLH
                                       &trans    &mo 3              &trans         &trans          &trans                &trans
            >;
        };

        other {
            bindings = <
&trans        &trans        &trans        &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &none         &none         &none   &none   &trans        &none   &none   &none   &none   &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans  &trans  &trans        &trans  &trans  &trans
            >;
        };
    };
};
