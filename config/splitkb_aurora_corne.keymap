/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        mo_kp: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL+ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | ALT      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R     &kp T             &kp Y         &kp U             &kp I          &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D      &kp F     &kp G             &kp H         &kp J             &kp K          &kp L    &kp SEMI  &kp BACKSLASH
&kp GRAVE  &kp Z  &kp X  &kp C      &kp V     &kp B             &kp N         &kp M             &kp COMMA      &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LSHFT  &kp LCMD  &mo_kp 1 SPACE    &mo_kp 2 RET  &mt RCTRL ESCAPE  &kp RIGHT_ALT
            >;
        };

        numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     | BTCLR|
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none   &kp RG(NUMBER_1)  &kp RG(NUMBER_2)  &kp RG(NUMBER_3)  &kp RG(NUMBER_4)  &kp RG(N5)      &kp RG(NUMBER_6)  &kp RG(N7)          &none                &none      &none   &kp BSPC
&trans  &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp NUMBER_5    &kp LEFT          &kp DOWN            &kp UP_ARROW         &kp RIGHT  &trans  &trans
&none   &kp NUMBER_6      &kp NUMBER_7      &kp NUMBER_8      &kp NUMBER_9      &kp NUMBER_0    &kp HOME          &kp RA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp END    &trans  &none
                                            &none             &trans            &kp SPACE       &kp RET           &trans              &mo 3
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB     |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL+ESC |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT     |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp SQT          &kp DOUBLE_QUOTES  &kp CARET  &kp QUESTION   &none          &kp LESS_THAN   &kp LEFT_BRACKET      &kp EQUAL  &kp RIGHT_BRACKET      &kp GREATER_THAN  &kp BSPC
&trans  &kp EXCLAMATION  &kp AT_SIGN        &kp HASH   &kp DOLLAR     &kp PERCENT    &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp COLON  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &kp NON_US_BACKSLASH
&none   &none            &kp TILDE          &kp PIPE   &kp AMPERSAND  &none          &none           &kp ASTERISK          &kp MINUS  &kp PLUS               &kp UNDER         &kp FSLH
                                            &trans     &trans         &kp SPACE      &kp RET         &trans                &kp RALT
            >;
        };

        other {
            bindings = <
&trans        &trans        &trans        &trans    &trans    &trans        &trans    &trans    &trans        &trans     &trans  &trans
&trans        &kp LSHFT     &kp LCTRL     &kp LALT  &kp LGUI  &trans        &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans    &trans    &bt BT_CLR    &trans    &trans    &trans        &trans     &trans  &trans
                                          &trans    &trans    &trans        &trans    &trans    &trans
            >;
        };
    };
};
